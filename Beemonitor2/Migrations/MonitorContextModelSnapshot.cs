// <auto-generated />
using Beemonitor2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Beemonitor2.Migrations
{
    [DbContext(typeof(MonitorContext))]
    partial class MonitorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Beemonitor2.Models.Apiary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Postcode");

                    b.HasKey("ID");

                    b.ToTable("Apiaries");
                });

            modelBuilder.Entity("Beemonitor2.Models.Beehive", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ApiaryID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("ApiaryID");

                    b.ToTable("Beehives");
                });

            modelBuilder.Entity("Beemonitor2.Models.BeehiveSensor", b =>
                {
                    b.Property<int>("BeehiveId");

                    b.Property<string>("SensorName")
                        .HasMaxLength(50);

                    b.HasKey("BeehiveId", "SensorName");

                    b.HasIndex("SensorName");

                    b.ToTable("BeehiveSensors");
                });

            modelBuilder.Entity("Beemonitor2.Models.Observation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ObsDateTime");

                    b.Property<float>("ObsValue");

                    b.Property<string>("SensorName");

                    b.HasKey("Id");

                    b.HasIndex("SensorName");

                    b.ToTable("Observations");
                });

            modelBuilder.Entity("Beemonitor2.Models.Sensor", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<int?>("SensorTypeId");

                    b.HasKey("Name");

                    b.HasIndex("SensorTypeId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("Beemonitor2.Models.SensorType", b =>
                {
                    b.Property<int>("SensorTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TypeDescription");

                    b.HasKey("SensorTypeId");

                    b.ToTable("SensorTypes");
                });

            modelBuilder.Entity("Beemonitor2.Models.Beehive", b =>
                {
                    b.HasOne("Beemonitor2.Models.Apiary", "Apiary")
                        .WithMany("Beehives")
                        .HasForeignKey("ApiaryID");
                });

            modelBuilder.Entity("Beemonitor2.Models.BeehiveSensor", b =>
                {
                    b.HasOne("Beemonitor2.Models.Beehive", "Beehive")
                        .WithMany("BeehiveSensors")
                        .HasForeignKey("BeehiveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Beemonitor2.Models.Sensor", "Sensor")
                        .WithMany("BeehiveSensors")
                        .HasForeignKey("SensorName")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Beemonitor2.Models.Observation", b =>
                {
                    b.HasOne("Beemonitor2.Models.Sensor", "Sensor")
                        .WithMany("Observations")
                        .HasForeignKey("SensorName");
                });

            modelBuilder.Entity("Beemonitor2.Models.Sensor", b =>
                {
                    b.HasOne("Beemonitor2.Models.SensorType", "SensorType")
                        .WithMany()
                        .HasForeignKey("SensorTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
